services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    aimeos:
        class: Aimeos\ShopBundle\Service\Aimeos
        arguments: ["@service_container"]
        public: true
    aimeos.config:
        class: Aimeos\ShopBundle\Service\Config
        arguments: ["@service_container"]
        public: true
    aimeos.context:
        class: Aimeos\ShopBundle\Service\Context
        arguments: ["@service_container"]
        public: true
    aimeos.i18n:
        class: Aimeos\ShopBundle\Service\I18n
        arguments: ["@service_container"]
        public: true
    aimeos.locale:
        class: Aimeos\ShopBundle\Service\Locale
        arguments: ["@request_stack","@service_container"]
        public: true
    aimeos.support:
        class: Aimeos\ShopBundle\Service\Support
        arguments: []
        public: true
    aimeos.view:
        class: Aimeos\ShopBundle\Service\View
        arguments: ["@request_stack","@service_container", "@security.token_storage", "@security.csrf.token_manager", "@twig"]
        public: true
    shop:
        class: Aimeos\ShopBundle\Service\Shop
        arguments: ["@service_container"]
        public: true

    aimeos_account:
        class: Aimeos\ShopBundle\Command\AccountCommand
        arguments: ["@service_container"]
        tags:
            - { name: 'console.command', command: 'aimeos:account' }
    aimeos_clear:
        class: Aimeos\ShopBundle\Command\ClearCommand
        arguments: ["@service_container"]
        tags:
            - { name: 'console.command', command: 'aimeos:clear' }
    aimeos_jobs:
        class: Aimeos\ShopBundle\Command\JobsCommand
        arguments: ["@service_container"]
        tags:
            - { name: 'console.command', command: 'aimeos:jobs' }
    aimeos_setup:
        class: Aimeos\ShopBundle\Command\SetupCommand
        arguments: ["@service_container"]
        tags:
            - { name: 'console.command', command: 'aimeos:setup' }

    aimeos.csrf_listener:
        class: Aimeos\ShopBundle\EventListener\CsrfListener
        arguments: ["@security.csrf.token_manager"]
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    Aimeos\ShopBundle\Controller\AccountController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\AdminController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\BasketController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\CatalogController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\CheckoutController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\GraphqlController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\JqadmController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\JsonadmController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\JsonapiController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\LocaleController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\PageController:
        calls:
            - setContainer: ["@service_container"]
    Aimeos\ShopBundle\Controller\SupplierController:
        calls:
            - setContainer: ["@service_container"]
